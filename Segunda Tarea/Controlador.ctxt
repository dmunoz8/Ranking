#BlueJ class context
comment0.params=
comment0.target=Controlador()
comment0.text=\r\n\ Constructor\r\n
comment1.params=stemm\ simb\ stop\ jaccard
comment1.target=java.lang.String\ run(boolean,\ boolean,\ boolean,\ boolean)
comment1.text=\r\n\ Revisa\ los\ documentos\ a\ leer\r\n\r\n\ @PARAM\ \=\ boolean\ stem,\ simb\ y\ stop\:\ configuraci\u00F3n\ de\ la\ construcci\u00F3n\ del\ indice.\r\n\ @return\ \=\ N/A\r\n
comment2.params=aFile\ stemm\ simb\ stop\ jaccard\ consultas
comment2.target=void\ Leer(java.io.File,\ boolean,\ boolean,\ boolean,\ boolean,\ java.lang.String[])
comment2.text=\r\n\ Lee\ los\ contenidos\ de\ los\ archivos\r\n\r\n\ @PARAM\ \=\ File\:\ archivo\ a\ leer;\ stem,\ simb\ y\ stop\:\ configuraci\u00F3n\ de\ la\ construcci\u00F3n\ del\ indice;\ consultas\:\ terminos\ de\ la\ consulta\r\n\ @return\ \=\ N/A\r\n
comment3.params=
comment3.target=void\ sacarPeso()
comment3.text=\r\n\ @brief\ Calcula\ el\ tf-idf\ y\ lo\ guarda\ en\ un\ mapa\ que\ contiene\ el\ termino\ y\ su\ peso.\r\n
comment4.params=sSplit\ tSplit
comment4.target=double\ pesoJaccard(java.lang.String[],\ java.lang.String[])
comment4.text=\r\n\ @brief\ Calcula\ la\ similitud\ entre\ consulta\ y\ documento\ usando\ el\ coeficiente\ de\ Jaccard.\ Recibe\ terminos\ de\ consulta\ y\ documento\ en\ un\ arreglo\ de\ Strings.\r\n\ @param\ String[],\ String[]\r\n\ @return\ similutud\ de\ la\ consulta\ y\ el\ documento,\ un\ valor\ entre\ 0\ y\ 1.\r\n
comment5.params=nombre
comment5.target=void\ obtenerDocs(java.lang.String)
comment5.text=\r\n\ Obtiene\ todos\ los\ busca\ el\ termino,\ recibido\ por\ parametro,\ en\ todos\ los\ documentos.\r\n\ @param\ String\r\n
comment6.params=aFile\ nombre
comment6.target=void\ LeerDF(java.io.File,\ java.lang.String)
comment6.text=\r\n\ @brief\ Calcula\ la\ frecuencia\ (DF)\ de\ un\ termino\ en\ un\ documento.Recibe\ el\ archivo\ y\ el\ termino\ a\ buscar.\r\n\ @param,\ File,\ String\r\n\ @return\ void\r\n
comment7.params=consulta
comment7.target=void\ dividirConsulta(java.lang.String)
comment7.text=\r\n\ Transforma\ la\ consulta\ recibida\ en\ la\ interfaz\ a\ un\ arreglo\ de\ Strings\r\n
comment8.params=documentos\ left\ right\ jaccard
comment8.target=java.io.File[]\ quickSort(java.io.File[],\ int,\ int,\ boolean)
comment8.text=\r\n\ @brief\:\ metodo\ de\ ordenamiento\ que\ utiliza\ el\ algoritmo\ quicksort.\ Dependiendo\ de\ si\ se\ usa\ jaccard\ o\ cosenos\ para\ puntaje\ ordena\r\n\ de\ forma\ ascendente\ o\ descendente.\ Recibe\ un\ arreglo\ de\ archivos\ a\ ordenar,\ los\ limites\ del\ arreglo\ y\ un\ booleano\ indicando\ si\ se\ usa\ jaccard.\r\n\ @param\:\ File[]documentos,\ int\ left,\ int\ right,\ boolean\ jaccard\r\n
comment9.params=args
comment9.target=void\ main(java.lang.String[])
comment9.text=\r\n\ Programa\ principal\ para\ elegir\ las\ opciones\ de\ configuraci\u00F3n\ y\ normalizacion\r\n
numComments=10
